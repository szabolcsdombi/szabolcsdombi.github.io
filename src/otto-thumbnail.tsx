import React, { useEffect } from 'react';
import { useRef } from 'react';

const vertexData = new Float32Array([
  18, -40, 35, 0, 0, 100,
  18, -53, 35, 0, 0, 100,
  22, -53, 34, 38, 0, 92,
  18, -40, 35, 0, 0, 100,
  22, -53, 34, 38, 0, 92,
  22, -40, 34, 38, 0, 92,
  22, -40, 34, 38, 0, 92,
  22, -53, 34, 38, 0, 92,
  25, -53, 32, 71, 0, 71,
  22, -40, 34, 38, 0, 92,
  25, -53, 32, 71, 0, 71,
  25, -40, 32, 71, 0, 71,
  25, -40, 32, 71, 0, 71,
  25, -53, 32, 71, 0, 71,
  27, -53, 29, 92, 0, 38,
  25, -40, 32, 71, 0, 71,
  27, -53, 29, 92, 0, 38,
  27, -40, 29, 92, 0, 38,
  27, -40, 29, 92, 0, 38,
  27, -53, 29, 92, 0, 38,
  28, -53, 25, 100, 0, 0,
  27, -40, 29, 92, 0, 38,
  28, -53, 25, 100, 0, 0,
  28, -40, 25, 100, 0, 0,
  28, -40, 25, 100, 0, 0,
  28, -53, 25, 100, 0, 0,
  27, -53, 21, 92, 0, -38,
  28, -40, 25, 100, 0, 0,
  27, -53, 21, 92, 0, -38,
  27, -40, 21, 92, 0, -38,
  27, -40, 21, 92, 0, -38,
  27, -53, 21, 92, 0, -38,
  25, -53, 17, 71, 0, -71,
  27, -40, 21, 92, 0, -38,
  25, -53, 17, 71, 0, -71,
  25, -40, 17, 71, 0, -71,
  25, -40, 17, 71, 0, -71,
  25, -53, 17, 71, 0, -71,
  22, -53, 15, 38, 0, -92,
  25, -40, 17, 71, 0, -71,
  22, -53, 15, 38, 0, -92,
  22, -40, 15, 38, 0, -92,
  22, -40, 15, 38, 0, -92,
  22, -53, 15, 38, 0, -92,
  18, -53, 14, 0, 0, -100,
  22, -40, 15, 38, 0, -92,
  18, -53, 14, 0, 0, -100,
  18, -40, 14, 0, 0, -100,
  18, -40, 14, 0, 0, -100,
  18, -53, 14, 0, 0, -100,
  14, -53, 15, -38, 0, -92,
  18, -40, 14, 0, 0, -100,
  14, -53, 15, -38, 0, -92,
  14, -40, 15, -38, 0, -92,
  14, -40, 15, -38, 0, -92,
  14, -53, 15, -38, 0, -92,
  10, -53, 17, -71, 0, -71,
  14, -40, 15, -38, 0, -92,
  10, -53, 17, -71, 0, -71,
  10, -40, 17, -71, 0, -71,
  10, -40, 17, -71, 0, -71,
  10, -53, 17, -71, 0, -71,
  8, -53, 21, -92, 0, -38,
  10, -40, 17, -71, 0, -71,
  8, -53, 21, -92, 0, -38,
  8, -40, 21, -92, 0, -38,
  8, -40, 21, -92, 0, -38,
  8, -53, 21, -92, 0, -38,
  7, -53, 25, -100, 0, 0,
  8, -40, 21, -92, 0, -38,
  7, -53, 25, -100, 0, 0,
  7, -40, 25, -100, 0, 0,
  7, -40, 25, -100, 0, 0,
  7, -53, 25, -100, 0, 0,
  8, -53, 29, -92, 0, 38,
  7, -40, 25, -100, 0, 0,
  8, -53, 29, -92, 0, 38,
  8, -40, 29, -92, 0, 38,
  8, -40, 29, -92, 0, 38,
  8, -53, 29, -92, 0, 38,
  10, -53, 32, -71, 0, 71,
  8, -40, 29, -92, 0, 38,
  10, -53, 32, -71, 0, 71,
  10, -40, 32, -71, 0, 71,
  27, -53, 21, 0, -100, 0,
  28, -53, 25, 0, -100, 0,
  26, -53, 25, 0, -100, 0,
  27, -53, 21, 0, -100, 0,
  26, -53, 25, 0, -100, 0,
  25, -53, 22, 0, -100, 0,
  10, -40, 32, -71, 0, 71,
  10, -53, 32, -71, 0, 71,
  14, -53, 34, -38, 0, 92,
  10, -40, 32, -71, 0, 71,
  14, -53, 34, -38, 0, 92,
  14, -40, 34, -38, 0, 92,
  14, -40, 34, -38, 0, 92,
  14, -53, 34, -38, 0, 92,
  18, -53, 35, 0, 0, 100,
  14, -40, 34, -38, 0, 92,
  18, -53, 35, 0, 0, 100,
  18, -40, 35, 0, 0, 100,
  10, -53, 17, 0, -100, 0,
  14, -53, 15, 0, -100, 0,
  14, -53, 17, 0, -100, 0,
  10, -53, 17, 0, -100, 0,
  14, -53, 17, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  14, -53, 34, 0, -100, 0,
  10, -53, 32, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  14, -53, 34, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  14, -53, 32, 0, -100, 0,
  27, -53, 29, 0, -100, 0,
  25, -53, 32, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  27, -53, 29, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  25, -53, 28, 0, -100, 0,
  18, -53, 14, 0, -100, 0,
  22, -53, 15, 0, -100, 0,
  21, -53, 17, 0, -100, 0,
  18, -53, 14, 0, -100, 0,
  21, -53, 17, 0, -100, 0,
  18, -53, 16, 0, -100, 0,
  22, -53, 34, 0, -100, 0,
  18, -53, 35, 0, -100, 0,
  18, -53, 33, 0, -100, 0,
  22, -53, 34, 0, -100, 0,
  18, -53, 33, 0, -100, 0,
  21, -53, 32, 0, -100, 0,
  8, -53, 29, 0, -100, 0,
  7, -53, 25, 0, -100, 0,
  9, -53, 25, 0, -100, 0,
  8, -53, 29, 0, -100, 0,
  9, -53, 25, 0, -100, 0,
  10, -53, 28, 0, -100, 0,
  25, -53, 17, 0, -100, 0,
  27, -53, 21, 0, -100, 0,
  25, -53, 22, 0, -100, 0,
  25, -53, 17, 0, -100, 0,
  25, -53, 22, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  8, -53, 21, 0, -100, 0,
  10, -53, 17, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  8, -53, 21, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  10, -53, 22, 0, -100, 0,
  18, -53, 35, 0, -100, 0,
  14, -53, 34, 0, -100, 0,
  14, -53, 32, 0, -100, 0,
  18, -53, 35, 0, -100, 0,
  14, -53, 32, 0, -100, 0,
  18, -53, 33, 0, -100, 0,
  28, -53, 25, 0, -100, 0,
  27, -53, 29, 0, -100, 0,
  25, -53, 28, 0, -100, 0,
  28, -53, 25, 0, -100, 0,
  25, -53, 28, 0, -100, 0,
  26, -53, 25, 0, -100, 0,
  14, -53, 15, 0, -100, 0,
  18, -53, 14, 0, -100, 0,
  18, -53, 16, 0, -100, 0,
  14, -53, 15, 0, -100, 0,
  18, -53, 16, 0, -100, 0,
  14, -53, 17, 0, -100, 0,
  10, -53, 32, 0, -100, 0,
  8, -53, 29, 0, -100, 0,
  10, -53, 28, 0, -100, 0,
  10, -53, 32, 0, -100, 0,
  10, -53, 28, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  25, -53, 32, 0, -100, 0,
  22, -53, 34, 0, -100, 0,
  21, -53, 32, 0, -100, 0,
  25, -53, 32, 0, -100, 0,
  21, -53, 32, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  22, -53, 15, 0, -100, 0,
  25, -53, 17, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  22, -53, 15, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  21, -53, 17, 0, -100, 0,
  7, -53, 25, 0, -100, 0,
  8, -53, 21, 0, -100, 0,
  10, -53, 22, 0, -100, 0,
  7, -53, 25, 0, -100, 0,
  10, -53, 22, 0, -100, 0,
  9, -53, 25, 0, -100, 0,
  -46, 39, 3, 0, 0, 100,
  -46, -39, 3, 0, 0, 100,
  -39, -46, 3, 0, 0, 100,
  -39, -46, 3, 0, 0, 100,
  39, -46, 3, 0, 0, 100,
  46, -39, 3, 0, 0, 100,
  46, -39, 3, 0, 0, 100,
  46, 39, 3, 0, 0, 100,
  39, 46, 3, 0, 0, 100,
  39, 46, 3, 0, 0, 100,
  -39, 46, 3, 0, 0, 100,
  -46, 39, 3, 0, 0, 100,
  -46, 39, 3, 0, 0, 100,
  -39, -46, 3, 0, 0, 100,
  46, -39, 3, 0, 0, 100,
  46, -39, 3, 0, 0, 100,
  39, 46, 3, 0, 0, 100,
  -46, 39, 3, 0, 0, 100,
  -39, -46, 3, -71, -71, 0,
  -46, -39, 3, -71, -71, 0,
  -46, -39, -40, -71, -71, 0,
  -39, -46, 3, -71, -71, 0,
  -46, -39, -40, -71, -71, 0,
  -39, -46, -40, -71, -71, 0,
  -39, 46, 3, 0, 100, 0,
  39, 46, 3, 0, 100, 0,
  39, 46, -40, 0, 100, 0,
  -39, 46, 3, 0, 100, 0,
  39, 46, -40, 0, 100, 0,
  -39, 46, -40, 0, 100, 0,
  -39, -46, -40, -50, -50, -71,
  -46, -39, -40, -50, -50, -71,
  -43, -38, -43, -50, -50, -71,
  -39, -46, -40, -50, -50, -71,
  -43, -38, -43, -50, -50, -71,
  -38, -43, -43, -50, -50, -71,
  -46, 39, -40, -100, 0, 0,
  -46, -39, -40, -100, 0, 0,
  -46, -39, 3, -100, 0, 0,
  -46, 39, -40, -100, 0, 0,
  -46, -39, 3, -100, 0, 0,
  -46, 39, 3, -100, 0, 0,
  -38, -43, -43, 0, -71, -71,
  38, -43, -43, 0, -71, -71,
  39, -46, -40, 0, -71, -71,
  -38, -43, -43, 0, -71, -71,
  39, -46, -40, 0, -71, -71,
  -39, -46, -40, 0, -71, -71,
  -39, 46, 3, -71, 71, 0,
  -39, 46, -40, -71, 71, 0,
  -46, 39, -40, -71, 71, 0,
  -39, 46, 3, -71, 71, 0,
  -46, 39, -40, -71, 71, 0,
  -46, 39, 3, -71, 71, 0,
  -39, 46, -40, 0, 71, -71,
  39, 46, -40, 0, 71, -71,
  38, 43, -43, 0, 71, -71,
  -39, 46, -40, 0, 71, -71,
  38, 43, -43, 0, 71, -71,
  -38, 43, -43, 0, 71, -71,
  -39, 46, -40, -50, 50, -71,
  -38, 43, -43, -50, 50, -71,
  -43, 38, -43, -50, 50, -71,
  -39, 46, -40, -50, 50, -71,
  -43, 38, -43, -50, 50, -71,
  -46, 39, -40, -50, 50, -71,
  -43, 38, -43, -71, 0, -71,
  -43, -38, -43, -71, 0, -71,
  -46, -39, -40, -71, 0, -71,
  -43, 38, -43, -71, 0, -71,
  -46, -39, -40, -71, 0, -71,
  -46, 39, -40, -71, 0, -71,
  -39, -46, -40, 0, -100, 0,
  39, -46, -40, 0, -100, 0,
  39, -46, 3, 0, -100, 0,
  -39, -46, -40, 0, -100, 0,
  39, -46, 3, 0, -100, 0,
  -39, -46, 3, 0, -100, 0,
  39, -46, 3, 71, -71, 0,
  39, -46, -40, 71, -71, 0,
  46, -39, -40, 71, -71, 0,
  39, -46, 3, 71, -71, 0,
  46, -39, -40, 71, -71, 0,
  46, -39, 3, 71, -71, 0,
  39, -46, -40, 50, -50, -71,
  38, -43, -43, 50, -50, -71,
  43, -38, -43, 50, -50, -71,
  39, -46, -40, 50, -50, -71,
  43, -38, -43, 50, -50, -71,
  46, -39, -40, 50, -50, -71,
  46, 39, -40, 100, 0, 0,
  46, 39, 3, 100, 0, 0,
  46, -39, 3, 100, 0, 0,
  46, 39, -40, 100, 0, 0,
  46, -39, 3, 100, 0, 0,
  46, -39, -40, 100, 0, 0,
  39, 46, 3, 71, 71, 0,
  46, 39, 3, 71, 71, 0,
  46, 39, -40, 71, 71, 0,
  39, 46, 3, 71, 71, 0,
  46, 39, -40, 71, 71, 0,
  39, 46, -40, 71, 71, 0,
  39, 46, -40, 50, 50, -71,
  46, 39, -40, 50, 50, -71,
  43, 38, -43, 50, 50, -71,
  39, 46, -40, 50, 50, -71,
  43, 38, -43, 50, 50, -71,
  38, 43, -43, 50, 50, -71,
  43, 38, -43, 71, 0, -71,
  46, 39, -40, 71, 0, -71,
  46, -39, -40, 71, 0, -71,
  43, 38, -43, 71, 0, -71,
  46, -39, -40, 71, 0, -71,
  43, -38, -43, 71, 0, -71,
  43, -38, -43, 0, 0, -100,
  38, -43, -43, 0, 0, -100,
  -38, -43, -43, 0, 0, -100,
  -38, -43, -43, 0, 0, -100,
  -43, -38, -43, 0, 0, -100,
  -43, 38, -43, 0, 0, -100,
  -43, 38, -43, 0, 0, -100,
  -38, 43, -43, 0, 0, -100,
  38, 43, -43, 0, 0, -100,
  38, 43, -43, 0, 0, -100,
  43, 38, -43, 0, 0, -100,
  43, -38, -43, 0, 0, -100,
  43, -38, -43, 0, 0, -100,
  -38, -43, -43, 0, 0, -100,
  -43, 38, -43, 0, 0, -100,
  -43, 38, -43, 0, 0, -100,
  38, 43, -43, 0, 0, -100,
  43, -38, -43, 0, 0, -100,
  -47, -14, -1, -71, 0, 71,
  -46, -16, 0, -71, 0, 71,
  -46, 16, 0, -71, 0, 71,
  -47, -14, -1, -71, 0, 71,
  -46, 16, 0, -71, 0, 71,
  -47, 14, -1, -71, 0, 71,
  -47, 14, -1, -71, 71, 0,
  -46, 16, 0, -71, 71, 0,
  -46, 16, -8, -71, 71, 0,
  -47, 14, -1, -71, 71, 0,
  -46, 16, -8, -71, 71, 0,
  -47, 14, -7, -71, 71, 0,
  -47, 14, -7, -71, 0, -71,
  -46, 16, -8, -71, 0, -71,
  -46, -16, -8, -71, 0, -71,
  -47, 14, -7, -71, 0, -71,
  -46, -16, -8, -71, 0, -71,
  -47, -14, -7, -71, 0, -71,
  -47, -14, -7, -71, -71, 0,
  -46, -16, -8, -71, -71, 0,
  -46, -16, 0, -71, -71, 0,
  -47, -14, -7, -71, -71, 0,
  -46, -16, 0, -71, -71, 0,
  -47, -14, -1, -71, -71, 0,
  -47, -14, -7, -100, 0, 0,
  -47, -14, -1, -100, 0, 0,
  -47, 14, -1, -100, 0, 0,
  -47, -14, -7, -100, 0, 0,
  -47, 14, -1, -100, 0, 0,
  -47, 14, -7, -100, 0, 0,
  47, -14, -1, 71, 0, 71,
  47, 14, -1, 71, 0, 71,
  46, 16, 0, 71, 0, 71,
  47, -14, -1, 71, 0, 71,
  46, 16, 0, 71, 0, 71,
  46, -16, 0, 71, 0, 71,
  47, 14, -1, 71, 71, 0,
  47, 14, -7, 71, 71, 0,
  46, 16, -8, 71, 71, 0,
  47, 14, -1, 71, 71, 0,
  46, 16, -8, 71, 71, 0,
  46, 16, 0, 71, 71, 0,
  47, 14, -7, 71, 0, -71,
  47, -14, -7, 71, 0, -71,
  46, -16, -8, 71, 0, -71,
  47, 14, -7, 71, 0, -71,
  46, -16, -8, 71, 0, -71,
  46, 16, -8, 71, 0, -71,
  47, -14, -7, 71, -71, 0,
  47, -14, -1, 71, -71, 0,
  46, -16, 0, 71, -71, 0,
  47, -14, -7, 71, -71, 0,
  46, -16, 0, 71, -71, 0,
  46, -16, -8, 71, -71, 0,
  47, -14, -7, 100, 0, 0,
  47, 14, -7, 100, 0, 0,
  47, 14, -1, 100, 0, 0,
  47, -14, -7, 100, 0, 0,
  47, 14, -1, 100, 0, 0,
  47, -14, -1, 100, 0, 0,
  -18, -40, 35, 0, 0, 100,
  -18, -53, 35, 0, 0, 100,
  -14, -53, 34, 38, 0, 92,
  -18, -40, 35, 0, 0, 100,
  -14, -53, 34, 38, 0, 92,
  -14, -40, 34, 38, 0, 92,
  -14, -40, 34, 38, 0, 92,
  -14, -53, 34, 38, 0, 92,
  -10, -53, 32, 71, 0, 71,
  -14, -40, 34, 38, 0, 92,
  -10, -53, 32, 71, 0, 71,
  -10, -40, 32, 71, 0, 71,
  -10, -40, 32, 71, 0, 71,
  -10, -53, 32, 71, 0, 71,
  -8, -53, 29, 92, 0, 38,
  -10, -40, 32, 71, 0, 71,
  -8, -53, 29, 92, 0, 38,
  -8, -40, 29, 92, 0, 38,
  -8, -40, 29, 92, 0, 38,
  -8, -53, 29, 92, 0, 38,
  -7, -53, 25, 100, 0, 0,
  -8, -40, 29, 92, 0, 38,
  -7, -53, 25, 100, 0, 0,
  -7, -40, 25, 100, 0, 0,
  -7, -40, 25, 100, 0, 0,
  -7, -53, 25, 100, 0, 0,
  -8, -53, 21, 92, 0, -38,
  -7, -40, 25, 100, 0, 0,
  -8, -53, 21, 92, 0, -38,
  -8, -40, 21, 92, 0, -38,
  -8, -40, 21, 92, 0, -38,
  -8, -53, 21, 92, 0, -38,
  -10, -53, 17, 71, 0, -71,
  -8, -40, 21, 92, 0, -38,
  -10, -53, 17, 71, 0, -71,
  -10, -40, 17, 71, 0, -71,
  -10, -40, 17, 71, 0, -71,
  -10, -53, 17, 71, 0, -71,
  -14, -53, 15, 38, 0, -92,
  -10, -40, 17, 71, 0, -71,
  -14, -53, 15, 38, 0, -92,
  -14, -40, 15, 38, 0, -92,
  -14, -40, 15, 38, 0, -92,
  -14, -53, 15, 38, 0, -92,
  -18, -53, 14, 0, 0, -100,
  -14, -40, 15, 38, 0, -92,
  -18, -53, 14, 0, 0, -100,
  -18, -40, 14, 0, 0, -100,
  -18, -40, 14, 0, 0, -100,
  -18, -53, 14, 0, 0, -100,
  -22, -53, 15, -38, 0, -92,
  -18, -40, 14, 0, 0, -100,
  -22, -53, 15, -38, 0, -92,
  -22, -40, 15, -38, 0, -92,
  -22, -40, 15, -38, 0, -92,
  -22, -53, 15, -38, 0, -92,
  -25, -53, 17, -71, 0, -71,
  -22, -40, 15, -38, 0, -92,
  -25, -53, 17, -71, 0, -71,
  -25, -40, 17, -71, 0, -71,
  -25, -40, 17, -71, 0, -71,
  -25, -53, 17, -71, 0, -71,
  -27, -53, 21, -92, 0, -38,
  -25, -40, 17, -71, 0, -71,
  -27, -53, 21, -92, 0, -38,
  -27, -40, 21, -92, 0, -38,
  -27, -40, 21, -92, 0, -38,
  -27, -53, 21, -92, 0, -38,
  -28, -53, 25, -100, 0, 0,
  -27, -40, 21, -92, 0, -38,
  -28, -53, 25, -100, 0, 0,
  -28, -40, 25, -100, 0, 0,
  -28, -40, 25, -100, 0, 0,
  -28, -53, 25, -100, 0, 0,
  -27, -53, 29, -92, 0, 38,
  -28, -40, 25, -100, 0, 0,
  -27, -53, 29, -92, 0, 38,
  -27, -40, 29, -92, 0, 38,
  -27, -40, 29, -92, 0, 38,
  -27, -53, 29, -92, 0, 38,
  -25, -53, 32, -71, 0, 71,
  -27, -40, 29, -92, 0, 38,
  -25, -53, 32, -71, 0, 71,
  -25, -40, 32, -71, 0, 71,
  -8, -53, 21, 0, -100, 0,
  -7, -53, 25, 0, -100, 0,
  -9, -53, 25, 0, -100, 0,
  -8, -53, 21, 0, -100, 0,
  -9, -53, 25, 0, -100, 0,
  -10, -53, 22, 0, -100, 0,
  -25, -40, 32, -71, 0, 71,
  -25, -53, 32, -71, 0, 71,
  -22, -53, 34, -38, 0, 92,
  -25, -40, 32, -71, 0, 71,
  -22, -53, 34, -38, 0, 92,
  -22, -40, 34, -38, 0, 92,
  -22, -40, 34, -38, 0, 92,
  -22, -53, 34, -38, 0, 92,
  -18, -53, 35, 0, 0, 100,
  -22, -40, 34, -38, 0, 92,
  -18, -53, 35, 0, 0, 100,
  -18, -40, 35, 0, 0, 100,
  -25, -53, 17, 0, -100, 0,
  -22, -53, 15, 0, -100, 0,
  -21, -53, 17, 0, -100, 0,
  -25, -53, 17, 0, -100, 0,
  -21, -53, 17, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -22, -53, 34, 0, -100, 0,
  -25, -53, 32, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -22, -53, 34, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -21, -53, 32, 0, -100, 0,
  -8, -53, 29, 0, -100, 0,
  -10, -53, 32, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -8, -53, 29, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -10, -53, 28, 0, -100, 0,
  -18, -53, 14, 0, -100, 0,
  -14, -53, 15, 0, -100, 0,
  -14, -53, 17, 0, -100, 0,
  -18, -53, 14, 0, -100, 0,
  -14, -53, 17, 0, -100, 0,
  -18, -53, 16, 0, -100, 0,
  -14, -53, 34, 0, -100, 0,
  -18, -53, 35, 0, -100, 0,
  -18, -53, 33, 0, -100, 0,
  -14, -53, 34, 0, -100, 0,
  -18, -53, 33, 0, -100, 0,
  -14, -53, 32, 0, -100, 0,
  -27, -53, 29, 0, -100, 0,
  -28, -53, 25, 0, -100, 0,
  -26, -53, 25, 0, -100, 0,
  -27, -53, 29, 0, -100, 0,
  -26, -53, 25, 0, -100, 0,
  -25, -53, 28, 0, -100, 0,
  -10, -53, 17, 0, -100, 0,
  -8, -53, 21, 0, -100, 0,
  -10, -53, 22, 0, -100, 0,
  -10, -53, 17, 0, -100, 0,
  -10, -53, 22, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -27, -53, 21, 0, -100, 0,
  -25, -53, 17, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -27, -53, 21, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -25, -53, 22, 0, -100, 0,
  -18, -53, 35, 0, -100, 0,
  -22, -53, 34, 0, -100, 0,
  -21, -53, 32, 0, -100, 0,
  -18, -53, 35, 0, -100, 0,
  -21, -53, 32, 0, -100, 0,
  -18, -53, 33, 0, -100, 0,
  -7, -53, 25, 0, -100, 0,
  -8, -53, 29, 0, -100, 0,
  -10, -53, 28, 0, -100, 0,
  -7, -53, 25, 0, -100, 0,
  -10, -53, 28, 0, -100, 0,
  -9, -53, 25, 0, -100, 0,
  -22, -53, 15, 0, -100, 0,
  -18, -53, 14, 0, -100, 0,
  -18, -53, 16, 0, -100, 0,
  -22, -53, 15, 0, -100, 0,
  -18, -53, 16, 0, -100, 0,
  -21, -53, 17, 0, -100, 0,
  -25, -53, 32, 0, -100, 0,
  -27, -53, 29, 0, -100, 0,
  -25, -53, 28, 0, -100, 0,
  -25, -53, 32, 0, -100, 0,
  -25, -53, 28, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -10, -53, 32, 0, -100, 0,
  -14, -53, 34, 0, -100, 0,
  -14, -53, 32, 0, -100, 0,
  -10, -53, 32, 0, -100, 0,
  -14, -53, 32, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -14, -53, 15, 0, -100, 0,
  -10, -53, 17, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -14, -53, 15, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -14, -53, 17, 0, -100, 0,
  -28, -53, 25, 0, -100, 0,
  -27, -53, 21, 0, -100, 0,
  -25, -53, 22, 0, -100, 0,
  -28, -53, 25, 0, -100, 0,
  -25, -53, 22, 0, -100, 0,
  -26, -53, 25, 0, -100, 0,
  -38, 43, 40, 0, 100, 0,
  38, 43, 40, 0, 100, 0,
  38, 43, 1, 0, 100, 0,
  -38, 43, 40, 0, 100, 0,
  38, 43, 1, 0, 100, 0,
  -38, 43, 1, 0, 100, 0,
  43, 38, 40, 100, 0, 0,
  43, -38, 40, 100, 0, 0,
  43, -38, 1, 100, 0, 0,
  43, 38, 40, 100, 0, 0,
  43, -38, 1, 100, 0, 0,
  43, 38, 1, 100, 0, 0,
  -38, 43, 1, -71, 71, 0,
  -43, 38, 1, -71, 71, 0,
  -43, 38, 40, -71, 71, 0,
  -38, 43, 1, -71, 71, 0,
  -43, 38, 40, -71, 71, 0,
  -38, 43, 40, -71, 71, 0,
  -38, -43, 1, 0, -100, 0,
  38, -43, 1, 0, -100, 0,
  38, -43, 40, 0, -100, 0,
  -38, -43, 1, 0, -100, 0,
  38, -43, 40, 0, -100, 0,
  -38, -43, 40, 0, -100, 0,
  -38, 43, 40, -50, 50, 71,
  -43, 38, 40, -50, 50, 71,
  -40, 37, 43, -50, 50, 71,
  -38, 43, 40, -50, 50, 71,
  -40, 37, 43, -50, 50, 71,
  -37, 40, 43, -50, 50, 71,
  38, 43, 1, 71, 71, 0,
  38, 43, 40, 71, 71, 0,
  43, 38, 40, 71, 71, 0,
  38, 43, 1, 71, 71, 0,
  43, 38, 40, 71, 71, 0,
  43, 38, 1, 71, 71, 0,
  38, 43, 40, 50, 50, 71,
  37, 40, 43, 50, 50, 71,
  40, 37, 43, 50, 50, 71,
  38, 43, 40, 50, 50, 71,
  40, 37, 43, 50, 50, 71,
  43, 38, 40, 50, 50, 71,
  -40, 37, 43, 0, 0, 100,
  -40, -37, 43, 0, 0, 100,
  -37, -40, 43, 0, 0, 100,
  -37, -40, 43, 0, 0, 100,
  37, -40, 43, 0, 0, 100,
  40, -37, 43, 0, 0, 100,
  40, -37, 43, 0, 0, 100,
  40, 37, 43, 0, 0, 100,
  37, 40, 43, 0, 0, 100,
  37, 40, 43, 0, 0, 100,
  -37, 40, 43, 0, 0, 100,
  -40, 37, 43, 0, 0, 100,
  -40, 37, 43, 0, 0, 100,
  -37, -40, 43, 0, 0, 100,
  40, -37, 43, 0, 0, 100,
  40, -37, 43, 0, 0, 100,
  37, 40, 43, 0, 0, 100,
  -40, 37, 43, 0, 0, 100,
  -38, -43, 40, 0, -71, 71,
  38, -43, 40, 0, -71, 71,
  37, -40, 43, 0, -71, 71,
  -38, -43, 40, 0, -71, 71,
  37, -40, 43, 0, -71, 71,
  -37, -40, 43, 0, -71, 71,
  -37, 40, 43, 0, 71, 71,
  37, 40, 43, 0, 71, 71,
  38, 43, 40, 0, 71, 71,
  -37, 40, 43, 0, 71, 71,
  38, 43, 40, 0, 71, 71,
  -38, 43, 40, 0, 71, 71,
  -38, -43, 1, -71, -71, 0,
  -38, -43, 40, -71, -71, 0,
  -43, -38, 40, -71, -71, 0,
  -38, -43, 1, -71, -71, 0,
  -43, -38, 40, -71, -71, 0,
  -43, -38, 1, -71, -71, 0,
  -38, -43, 40, -50, -50, 71,
  -37, -40, 43, -50, -50, 71,
  -40, -37, 43, -50, -50, 71,
  -38, -43, 40, -50, -50, 71,
  -40, -37, 43, -50, -50, 71,
  -43, -38, 40, -50, -50, 71,
  -43, 38, 1, -100, 0, 0,
  -43, -38, 1, -100, 0, 0,
  -43, -38, 40, -100, 0, 0,
  -43, 38, 1, -100, 0, 0,
  -43, -38, 40, -100, 0, 0,
  -43, 38, 40, -100, 0, 0,
  40, -37, 43, 71, 0, 71,
  43, -38, 40, 71, 0, 71,
  43, 38, 40, 71, 0, 71,
  40, -37, 43, 71, 0, 71,
  43, 38, 40, 71, 0, 71,
  40, 37, 43, 71, 0, 71,
  -40, -37, 43, -71, 0, 71,
  -40, 37, 43, -71, 0, 71,
  -43, 38, 40, -71, 0, 71,
  -40, -37, 43, -71, 0, 71,
  -43, 38, 40, -71, 0, 71,
  -43, -38, 40, -71, 0, 71,
  38, -43, 1, 71, -71, 0,
  43, -38, 1, 71, -71, 0,
  43, -38, 40, 71, -71, 0,
  38, -43, 1, 71, -71, 0,
  43, -38, 40, 71, -71, 0,
  38, -43, 40, 71, -71, 0,
  38, -43, 40, 50, -50, 71,
  43, -38, 40, 50, -50, 71,
  40, -37, 43, 50, -50, 71,
  38, -43, 40, 50, -50, 71,
  40, -37, 43, 50, -50, 71,
  37, -40, 43, 50, -50, 71,
  23, -53, 31, 0, -100, 0,
  21, -53, 32, 0, -100, 0,
  18, -53, 33, 0, -100, 0,
  18, -53, 33, 0, -100, 0,
  14, -53, 32, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  10, -53, 28, 0, -100, 0,
  9, -53, 25, 0, -100, 0,
  9, -53, 25, 0, -100, 0,
  10, -53, 22, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  14, -53, 17, 0, -100, 0,
  18, -53, 16, 0, -100, 0,
  18, -53, 16, 0, -100, 0,
  21, -53, 17, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  25, -53, 22, 0, -100, 0,
  26, -53, 25, 0, -100, 0,
  26, -53, 25, 0, -100, 0,
  25, -53, 28, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  18, -53, 33, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  9, -53, 25, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  18, -53, 16, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  26, -53, 25, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  12, -53, 31, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  12, -53, 19, 0, -100, 0,
  23, -53, 19, 0, -100, 0,
  23, -53, 31, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -14, -53, 32, 0, -100, 0,
  -18, -53, 33, 0, -100, 0,
  -18, -53, 33, 0, -100, 0,
  -21, -53, 32, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -25, -53, 28, 0, -100, 0,
  -26, -53, 25, 0, -100, 0,
  -26, -53, 25, 0, -100, 0,
  -25, -53, 22, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -21, -53, 17, 0, -100, 0,
  -18, -53, 16, 0, -100, 0,
  -18, -53, 16, 0, -100, 0,
  -14, -53, 17, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -10, -53, 22, 0, -100, 0,
  -9, -53, 25, 0, -100, 0,
  -9, -53, 25, 0, -100, 0,
  -10, -53, 28, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -18, -53, 33, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -26, -53, 25, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -18, -53, 16, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -9, -53, 25, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
  -23, -53, 31, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -23, -53, 19, 0, -100, 0,
  -12, -53, 19, 0, -100, 0,
  -12, -53, 31, 0, -100, 0,
]);

const vec = (x, y, z) => ({ x, y, z });
const sub = (a, b) => ({ x: a.x - b.x, y: a.y - b.y, z: a.z - b.z });
const cross = (a, b) => ({ x: a.y * b.z - a.z * b.y, y: a.z * b.x - a.x * b.z, z: a.x * b.y - a.y * b.x });
const dot = (a, b) => a.x * b.x + a.y * b.y + a.z * b.z;
const scale = (a, s) => ({ x: a.x * s, y: a.y * s, z: a.z * s });
const normalize = (a) => {
  const l = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
  return { x: a.x / l, y: a.y / l, z: a.z / l };
};

const camera = (eye, target, aspect) => {
  const up = { x: 0.0, y: 0.0, z: 1.0 };
  const fov = 60.0;
  const znear = 0.1;
  const zfar = 1000.0;

  const f = normalize(sub(target, eye));
  const s = normalize(cross(f, up));
  const u = cross(s, f);
  const t = { x: -dot(s, eye), y: -dot(u, eye), z: -dot(f, eye) };

  const r0 = Math.tan(fov * 0.008726646259971647884618453842);
  const r1 = r0 * Math.max(1.0 / aspect, 1.0);
  const r2 = r0 * Math.max(aspect, 1.0);
  const r3 = (zfar + znear) / (zfar - znear);
  const r4 = (2.0 * zfar * znear) / (zfar - znear);

  return new Float32Array([
    s.x / r2, u.x / r1, r3 * f.x, f.x,
    s.y / r2, u.y / r1, r3 * f.y, f.y,
    s.z / r2, u.z / r1, r3 * f.z, f.z,
    t.x / r2, t.y / r1, r3 * t.z - r4, t.z,
  ]);
};

const vertexShaderCode = `
  #version 300 es
  precision highp float;

  uniform mat4 mvp;

  layout (location = 0) in vec3 in_vertex;
  layout (location = 1) in vec3 in_normal;

  out vec3 v_normal;

  void main() {
    gl_Position = mvp * vec4(in_vertex, 1.0);
    v_normal = in_normal;
  }
`;

const fragmentShaderCode = `
  #version 300 es
  precision highp float;

  uniform vec3 color;

  in vec3 v_normal;

  layout (location = 0) out vec4 out_color;

  void main() {
    vec3 light = vec3(4.0, -3.0, 10.0);
    float lum = dot(normalize(light), normalize(v_normal)) * 0.3 + 0.7;
    out_color = vec4(color * lum, 1.0);
  }
`;

const clip = ({ x, y }) => {
  const length = Math.sqrt(x * x + y * y);
  if (length > 1.0) {
    return { x: x / length, y: y / length };
  }
  return { x, y };
};

export const OttoThumbnail = ({ size, resolution }) => {
  const ref = useRef(null);
  const hover = useRef({ x: 0, y: 0});

  useEffect(() => {
    const gl = ref.current.getContext('webgl2') as WebGL2RenderingContext;

    const vbo = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);
    gl.bufferData(gl.ARRAY_BUFFER, vertexData, gl.STATIC_DRAW);

    const vao = gl.createVertexArray();
    gl.bindVertexArray(vao);
    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 24, 0);
    gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 24, 12);
    gl.enableVertexAttribArray(0);
    gl.enableVertexAttribArray(1);

    const vs = gl.createShader(gl.VERTEX_SHADER);
    const fs = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(vs, vertexShaderCode.trim());
    gl.shaderSource(fs, fragmentShaderCode.trim());
    gl.compileShader(vs);
    gl.compileShader(fs);

    const prog = gl.createProgram();
    gl.attachShader(prog, vs);
    gl.attachShader(prog, fs);
    gl.linkProgram(prog);

    const mvpUniform = gl.getUniformLocation(prog, 'mvp');
    const colorUniform = gl.getUniformLocation(prog, 'color');

    let anim = null;

    const render = () => {
      gl.viewport(0, 0, resolution, resolution);
      gl.clearColor(0.0, 0.0, 0.0, 0.0);
      gl.enable(gl.DEPTH_TEST);
      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
      gl.useProgram(prog);
      gl.bindVertexArray(vao);
      const mvp = camera(scale(normalize(vec(-hover.current.x, -3, hover.current.y)), 180.0), vec(0.0, 0.0, 0.0), 1.0);
      gl.uniformMatrix4fv(mvpUniform, false, mvp);
      gl.uniform3f(colorUniform, 1.0, 1.0, 1.0);
      gl.drawArrays(gl.TRIANGLES, 0, 576);
      gl.uniform3f(colorUniform, 0.10, 0.72, 0.00);
      gl.drawArrays(gl.TRIANGLES, 576, 114);
      gl.uniform3f(colorUniform, 0.0, 0.0, 0.0);
      gl.drawArrays(gl.TRIANGLES, 690, 84);
      anim = requestAnimationFrame(render);
    };

    const mousemove = (evt) => {
      const rect = ref.current.getBoundingClientRect();
      const cx = (rect.left + rect.right) / 2.0;
      const cy = (rect.top + rect.bottom) / 2.0;
      hover.current = clip({ x: (evt.clientX - cx) / resolution, y: (evt.clientY - cy) / resolution });
    };

    document.addEventListener('mousemove', mousemove);
    anim = requestAnimationFrame(render);

    return () => {
      document.removeEventListener('mousemove', mousemove);
      cancelAnimationFrame(anim);
    };
  }, []);

  return (
    <canvas
      ref={ref}
      width={resolution}
      height={resolution}
      style={{
        width: size,
        height: size,
      }}
    />
  )
};
